name: tests

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  POETRY_VERSION: "1.6.1"

jobs:
  deploy:
    runs-on: ubuntu-latest # ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # virtualenv cache should depends on OS, Python version and `poetry.lock`
      - name: Poetry cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.local
            .venv
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache folder for cartes
        uses: actions/cache@v4
        id: cache-folder
        with:
          path: |
            ~/.cache/cartes/
          key: cartes-${{ runner.os }}

      - name: Display Python version
        run: poetry run python -c "import sys; print(sys.version)"

      - name: Ubuntu system dependencies
        run: |
          sudo apt update
          sudo apt install -y libgdal-dev libgeos-dev libproj-dev proj-bin proj-data

      - name: Install dependencies
        run: |
          poetry install

      - name: Style checking
        run: |
          poetry run ruff cartes
          poetry run ruff format --check cartes

      - name: Type checking
        run: |
          poetry run mypy cartes

      - name: Run tests
        env:
          LD_LIBRARY_PATH: /usr/local/lib
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run pytest --cov --cov-report term-missing --ignore=cartes/__main__.py

      - uses: codecov/codecov-action@v3
